name: Update AWS Environment
run-name: ${{ github.actor }} is updating the AWS environment in GitHub Actions ðŸš€

on: 
  push:
    branches:
      - main

permissions:
  contents: read

jobs:
  update-infra-and-sync-site: #updates AWS infrastructure and syncs S3 bucket changes
    runs-on: ubuntu-latest
    environment:
      name: production
    permissions:
      id-token: write # This is required for requesting the JWT
    steps: 
      - name: Harden Runner
        uses: step-security/harden-runner@1f99358870fe1c846a3ccba386cc2b2246836776 # v2.2.1
        with:
          egress-policy: audit # TODO: change to 'egress-policy: block' after couple of runs

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@e1e17a757e536f70e52b5a12b2e8d1d1c60e04ef # v2.0.0
        with:
          aws-region: us-east-1
          role-to-assume: ${{ secrets.WRITE_ROLE }}
          role-session-name: OIDCSession
      - name: Download repo
        uses: actions/checkout@24cb9080177205b6e8c946b17badbe402adc938f # v3.4.0
      - name: Build SAM template for deployment 
        run: sam build
      - name: Deploy SAM template to AWS
        run: sam deploy --no-confirm-changeset --no-fail-on-empty-changeset --debug
      - name: Copy files to the production website with the AWS CLI
        run: |
          aws s3 sync . s3://gb-cloud-resume --size-only --exclude='*' --include='*.html' --include='*.css' --include='*.js' --include='*.png' --include='*.ico' --include='*.webmanifest'
      - name: Check deployment status
        run: aws cloudformation describe-stacks --stack-name cloud-resume-challenge || exit 1
      
  dast-scan: #performs Dynamic Application Security Testing against the target site
    runs-on: ubuntu-latest
    name: Scan the webapplication
    steps:
      - name: Checkout
        uses: actions/checkout@24cb9080177205b6e8c946b17badbe402adc938f # v3.4.0
      - name: ZAP Scan
        uses: zaproxy/action-baseline@v0.7.0
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          docker_name: 'owasp/zap2docker-stable'
          target: 'https://grahambaggett.com'
          rules_file_name: '.zap/rules.tsv'
          cmd_options: '-a'
#     environment:
#       name: production
#     permissions:
#       id-token: write # This is required for requesting the JWT
#     needs: update-infra-and-sync-site
#     container:
#       image: owasp/zap2docker-stable
#       options: --user root -v ${{ github.workspace }}:/zap/wrk/:rw
#     steps:
#       - run: pwd && ls -l
#       - name: run zap baseline scan
#         run: zap-baseline.py -t https://grahambaggett.com -x report_xml.xml || echo 0
